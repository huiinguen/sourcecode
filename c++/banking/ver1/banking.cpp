#include<iostream>
#include<string>
#include<windows.h>
#include<fstream>
#include<ctime>

using namespace std;

void menu_banking();
bool loginUser();
void registerUser();
void banking_setting();
void deposit();
void dashboard_user();
void showBalance();
void history_deposit();
void update();
string format_vnd(long long n);
void transfer_money();
string title();
string get_time();
void showlogin_history();
void name_user();
string get_name_user();
void fake_faceid();
void shopping();

void TextColor(int color) { HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);  SetConsoleTextAttribute(hConsole, color);  }

//------------------------------------ banking-------------------------------------------

// ti√™u ƒë·ªÅ cho nh√¢n v·∫≠t
string title() {
    string content;
    ifstream file("text.txt"); 
    if (file.is_open()) {
        getline(file, content); 
        file.close();
    } else {
        content = "BANKING SYSTEM"; 
    }
    return content;
}

// b·∫£n c·∫≠p nh·∫≠t
void update(){int choice;
    do{system("cls");cout<<"\n\n";
        cout<<"\t\t=======================\n";
        cout<<"\t\tDevelop language: C++\n";
        cout<<"\t\t=======================\n\n";
        cout<<"\t1. version 1(finish)\n";
        cout<<"\t2. version 2\n";
        cout<<"\t3. version 3\n";
        cout<<"\t4. version 4\n";
        cout<<"\t--> ";cin>>choice;
        switch(choice){
            case 1:{
            system("start https://github.com/huiinguen/sourcecode/tree/main/c%2B%2B/banking/ver1");
            system("pause"); break;
            }
            case 2:{}
            case 3:{}
            case 4:{}
        }
    }while(choice!=0);
}

// banking setting
void banking_setting() {int choice;

    do {system("cls");cout << "\n\n";
        cout << "\t1. Thay ƒë·ªïi m√†u giao di·ªán\n";
        cout << "\t2. T√πy ch·ªânh ti√™u ƒë·ªÅ ·ª©ng d·ª•ng\n";
        cout << "\t0. Tho√°t\n";
        cout << "\t---> ";cin >> choice;

        switch (choice) {
        case 1: {int colorChoice;
            do {system("cls");
                cout << "\n\t\tüé® Thi·∫øt l·∫≠p m√†u cho Banking\n\n";
                cout << "\t2. Xanh l√°\t3. Xanh bi·ªÉn\n";
                cout << "\t4. ƒê·ªè\t\t5. T√≠m\n";
                cout << "\t7. Tr·∫Øng\t75. Tr·∫Øng ph·ªß h·ªìng\n";
                cout << "\t87. Tr·∫Øng ph·ªß n·ªÅn\n";
                cout << "\t0. Quay l·∫°i\n";
                cout << "\t--> ";cin >> colorChoice;

                if (colorChoice == 0) break;

                TextColor(colorChoice);

                ofstream openfile("setting_color.txt", ios::out | ios::trunc);
                if (openfile.is_open()) {
                    openfile << colorChoice;
                    openfile.close();
                    cout << "\n‚úÖ ƒê√£ l∆∞u m√†u giao di·ªán!\n";
                } else {
                    cout << "\n‚ö†Ô∏è Kh√¥ng th·ªÉ l∆∞u file m√†u!\n";
                }
                Sleep(800);
            } while (colorChoice != 0);
            break;
        }

        case 2: {string text;
            do{
                cout << "\n\tNh·∫≠p ti√™u ƒë·ªÅ m·ªõi cho ·ª©ng d·ª•ng: ";
                getline(cin, text);
            }while(text.length() <=1);

            ofstream openfile2("text.txt", ios::out | ios::trunc);
            if (openfile2.is_open()) {
                openfile2 << text;
                openfile2.close();
                cout << "\t‚úÖ ƒê√£ l∆∞u ti√™u ƒë·ªÅ!\n";
            } else {
                cout << "\t‚ö†Ô∏è Kh√¥ng th·ªÉ l∆∞u ti√™u ƒë·ªÅ!\n";
            }
            Sleep(800);
            break;
        }

        case 0:  break;

        default:
            cout << "\n‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!\n";
            Sleep(800);
        }
    } while (choice != 0);
}

// ƒëƒÉng nh·∫≠p b·∫±ng face id
void fake_faceid() {
    ofstream openfile("lichsudangnhap.txt");
    if(openfile.is_open()){
        openfile<<"["<<get_time()<<"]: ƒëƒÉng nh·∫≠p face id th√†nh c√¥ng\n";
        system("start microsoft.windows.camera:");
        Sleep(3000); // m√¥ ph·ªèng qu√©t m·∫∑t 3 gi√¢y
        system("taskkill /IM WindowsCamera.exe /F");
        cout << "\t‚úÖ FaceID x√°c nh·∫≠n th√†nh c√¥ng!\n";
    }else{
        cout<<"\n\t camera b·ªã h∆∞ or kh√¥ng c√≥ thi·∫øt b·ªã\n";
    }
    openfile.close();
}

// ƒëƒÉng k√Ω t√†i kho·∫£n
void registerUser() {string password, name;

    ofstream openfile("name.txt", ios::out | ios::trunc);
    ofstream openfile2("password.txt", ios::out | ios::trunc);

    if(openfile.is_open() && openfile2.is_open()) {
        cout << "\n\n\t\tVui l√≤ng nh·∫≠p th√¥ng tin t√™n v√† m·∫≠t kh·∫©u\n\n";

        do{
            cout << "\t\t\t\t\tName: ";cin >> name;
            cout << "\t\t\t\t\tPassword: ";cin >> password;
            if(name.length() < 7  && password.length() <7) {
                cout << "\t\t H·ªá th·ªëng cho th·∫•y b·∫°n ƒëang sai!\n";
                cout << "\t\t‚ùå T√™n ph·∫£i c√≥ √≠t nh·∫•t 7 k√Ω t·ª±!\n";
                cout << "\t\t‚ùå M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 7 k√Ω t·ª±!\n";
            }
        } while(name.length() < 7 && password.length() <7);

        openfile << name;
        openfile2 << password;

        openfile.close();
        openfile2.close();

        Sleep(1000);
        cout << "\t\t‚úÖ H·ªá th·ªëng ƒë√£ ghi th√†nh c√¥ng.\n";
    } else {
        cout << "\n‚ö†Ô∏è L·ªói h·ªá th·ªëng: kh√¥ng th·ªÉ m·ªü file.\n";
    }
    Sleep(1000);
}

// ƒëƒÉng nh·∫≠p
bool loginUser() {string password, check_password, name, check_name,note;
    ifstream openfile("name.txt");
    ifstream openfile2("password.txt");
    ofstream lichsu_dangnhap("lichsudangnhap.txt",ios::app);

    if (openfile.is_open() && openfile2.is_open()) {
        openfile >> check_name;
        openfile2 >> check_password;

        openfile.close();
        openfile2.close();

        cout << "\n\n\t\t\t\t\tName: ";cin >> name;
        cout << "\t\t\t\t\tPassword: ";cin >> password;

        if (check_name == name) {
            if (check_password == password) {
                cout << "\t\t‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng\n";
                Sleep(1000);
                lichsu_dangnhap<<"["<<get_time()<<"]: ƒëƒÉng nh·∫≠p user and password th√†nh c√¥ng\n";
                return true;
            } else {
                cout << "\t\t‚ùå M·∫≠t kh·∫©u sai!\n";
                Sleep(1000);
                lichsu_dangnhap<<"["<<get_time()<<"]: ƒëƒÉng nh·∫≠p user and password th·∫•t b·∫°i\n";
                return false;
            }
        } else {
            cout << "\t\t‚ùå T√™n ƒëƒÉng nh·∫≠p kh√¥ng t·ªìn t·∫°i!\n";
            Sleep(1000);
            return false;
        }
    } else {
        cout << "\t\t‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü file d·ªØ li·ªáu.\n";
        Sleep(1000);
        return false;
    }
    lichsu_dangnhap.close();

}
 
// menu banking(main)
void menu_banking(){int choice,check_color;
    ifstream openfile("setting_color.txt");
    if (openfile.is_open()){
        openfile >> check_color;
        TextColor(check_color); 
        openfile.close();
    }
    do{system("cls");cout << "\n\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚£∂‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                 "<<title()<<"\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°í‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ô‚°Ñ‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚†§‚¢Ñ‚°Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†ò‚°Ñ‚†Ä‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†í‚¢Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚†±‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†±‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚¢É‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£∂‚£ø‚£≠‚£ç‚°â‚†ô‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚¢Ç‚£ì‚£∂‚£∂‚£∂‚£∂‚£§‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚†ü‚¢Ä‚£¥‚¢ø‚£ø‚£ø‚£ø‚†ü‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†§‚†§‚†§‚†§‚†ô‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚°è‚£†‚†ü‚°â‚£æ‚£ø‚£ø‚†ã‚°†‚†ä‚£ø‚°ü‚£π‚£ø‚¢ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£∂‚£§‚£≠‚£§‚£º‚£ø‚¢õ‚£ø‚£ø‚£ø‚£ø‚£ª‚£ø‚£ø‚†á‚†ê‚¢Ä‚£ø‚£ø‚°∑‚†ã‚†Ä‚¢†‚£ø‚£∫‚£ø‚£ø‚¢∫‚£ø‚£ã‚£â‚£â‚£©‚£¥‚£∂‚£§‚£§‚£Ñ‚†Ä ‚†Ä‚†Ä ‚†Ä‚†Ä‚†Ä 1.Sign in‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†ª‚†ø‚£ø‚£ø‚£ø‚£á‚¢ª‚£ø‚£ø‚°ø‚†ø‚£ø‚£Ø‚°Ä‚†Ä‚¢∏‚£ø‚†ã‚¢Ä‚£†‚£∂‚†ø‚†ø‚¢ø‚°ø‚†à‚£æ‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä  ‚†Ä‚†Ä‚†Ä‚†Ä 2.Sign up‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚¢ß‚°∏‚£ø‚£ø‚£ø‚†Ä‚†É‚†ª‚†ü‚¢¶‚¢æ‚¢£‚†∂‚†ø‚†è‚†Ä‚†∞‚†Ä‚£º‚°á‚£∏‚£ø‚£ø‚†ü‚†â‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä 3.Face id‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£æ‚£∂‚£Ω‚£ø‚°ü‚†ì‚†í‚†Ä‚†Ä‚°Ä‚†Ä‚††‚†§‚†¨‚†â‚†Å‚£∞‚£•‚£æ‚£ø‚£ø‚£∂‚£∂‚£∑‚°∂‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  4.Setting‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†π‚†ü‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚††‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚†õ‚†õ‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä   5.Update" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†ã‚†π‚£∑‚£Ñ‚†Ä‚†ê‚£ä‚£Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†Å‚†£‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä0.Exit" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£§‚£Ä‚†§‚†ä‚¢Å‚°∏‚†Ä‚£Ü‚†π‚£ø‚£ß‚£Ä‚†Ä‚†Ä‚°†‚†ñ‚°ë‚†Å‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£¶‚£∂‚£ø‚£ø‚£ü‚£Å‚£§‚£æ‚†ü‚†Å‚¢Ä‚£ø‚£Ü‚†π‚°Ü‚†ª‚£ø‚†â‚¢Ä‚†ú‚°∞‚†Ä‚†Ä‚†à‚†ë‚¢¶‚°Ä‚†à‚¢æ‚†ë‚°æ‚†≤‚£Ñ‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ñ‚†í‚†ö‚†õ‚†õ‚†¢‚†Ω‚¢Ñ‚£ò‚£§‚°é‚††‚†ø‚†Ç‚†Ä‚††‚†¥‚†∂‚¢â‚°≠‚†É‚¢∏‚†É‚†Ä‚£ø‚£ø‚£ø‚†°‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä" << "\n";
        cout << "\t\t\t\t\t\t\t\t---> ";cin >> choice;
        switch (choice){
        case 1:{
            if (loginUser()){  dashboard_user();  }
            break;
        }
        case 2:{ registerUser();break;}
        case 3:{fake_faceid();dashboard_user();}
        case 4:{  banking_setting();break;}
        case 5:{ update();  break;  }
        }
    } while (choice != 0);
}

//--------------------------------------graphics user--------------------------------------

// n·∫°p ti·ªÅn
void deposit() {
    long long money = 0, current = 0;
    cout << "\t\tüí∞ N·∫°p Ti·ªÅn: ";cin >> money;

    if (money <= 0) {
        cout << "\t\t‚ö†Ô∏è S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!\n";
        return;
    }

    // ƒê·ªçc s·ªë d∆∞ hi·ªán t·∫°i
    ifstream sodu("deposit.txt");
    if (sodu.is_open()) sodu >> current;
    sodu.close();

    long long total = current + money;

    // Ghi l·∫°i s·ªë d∆∞ m·ªõi
    ofstream sodu_moi("deposit.txt", ios::trunc);
    sodu_moi << total;
    sodu_moi.close();

    // Ghi l·ªãch s·ª≠ n·∫°p ti·ªÅn
    ofstream history("lichsugiaodich.txt", ios::app);
    history << "[" << get_time() << "] N·∫°p: " << format_vnd(money) << " | T·ªïng: " << format_vnd(total) << "\n";
    history.close();

    cout << "\t‚úÖ ƒê√£ n·∫°p th√†nh c√¥ng " << format_vnd(money) << endl;
    Sleep(1000);
}

// ƒë·ªãnh d·∫°ng ti·ªÅn(vnd)
string format_vnd(long long n) {
    string s = to_string(n);
    int insertPosition = s.length() - 3;
    while (insertPosition > 0) {
        s.insert(insertPosition, ".");
        insertPosition -= 3;
    }
    return s + " VND";
}

// ƒë·ªçc s·ªë ti·ªÅn
void showBalance() {long long money = 0;
    ifstream openfile("deposit.txt");

    if (!openfile.is_open()) {
        cout << "\t‚ö†Ô∏è Kh√¥ng th·ªÉ m·ªü file s·ªë d∆∞.\n";
        return;
    }

    if (!(openfile >> money)) {
        cout << "\t‚ö†Ô∏è File r·ªóng ho·∫∑c l·ªói d·ªØ li·ªáu.\n";
        openfile.close();
        return;
    }

    openfile.close();
    cout << "\tüí∞ S·ªë d∆∞: " << format_vnd(money);
}

// chuy·ªÉn ti·ªÅn
void transfer_money() {
    long long deposit = 0, money = 0,tong=0,tong2=0;
    string nguoinhan,noidung,nganhang;

    ifstream openfile("deposit.txt");
    if (openfile.is_open()) openfile >> deposit;
    openfile.close();

    system("cls");cout<<"\n\n";

    cout << "\n\t\t Chuy·ªÉn s·ªë ti·ªÅn? : ";cin >> money;
    cout<<"\t\t Ng∆∞·ªùi nh·∫≠n: ";cin>>nguoinhan;
    cout<<"\t\t Ng√¢n h√†ng: ";cin>>nganhang;
    cout<<"\t\t N·ªôi dung: ";cin>>noidung;

    if (money <= 0) {
        cout << "\t‚ö†Ô∏è S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!\n";
        return;
    }

    if (deposit >= money) {
        tong = deposit - money;
        ofstream file("deposit.txt", ios::trunc);
        file << tong;
        file.close();

        Sleep(1000); cout << "\t‚úÖ Chuy·ªÉn ti·ªÅn th√†nh c√¥ng!\n";
        cout << "\tüí∞ S·ªë d∆∞ c√≤n l·∫°i: " << format_vnd(tong) << endl;
    } else {
        Sleep(1000);cout << "\t‚ùå S·ªë d∆∞ kh√¥ng ƒë·ªß!\n";
    }

    // ghi l·ªãch s·ª≠ chuy·ªÉn ti·ªÅn
    ofstream history("lichsugiaodich.txt",ios::app);
    ifstream deposit1("deposit.txt");
    if(deposit1.is_open()){
        deposit1>>tong2;
        deposit1.close();
    }
    tong2-=money;
    history<<"\n["<<get_time()<<"][TH√îNG TIN CHUY·ªÇN TI·ªÄN]"<<endl;
    history<<"Ng∆∞·ªùi g·ª≠i:"<<get_name_user()<<endl;
    history<<"Ng∆∞·ªùi nh·∫≠n: "<<nguoinhan<<endl;
    history<<"Chuy·ªÉn Ti·ªÅn: "<<format_vnd(money)<<" | C√≤n: "<<format_vnd(tong2)<<endl;
    history<<"Ng√¢n h√†ng: "<<nganhang<<endl;
    history<<"N·ªôi dung: "<<noidung<<endl;
    history.close();
    cout << "\t‚úÖ ƒê√£ chuy·ªÉn th√†nh c√¥ng " << format_vnd(money) << endl;
    Sleep(1000);
}

// l·∫•y th·ªùi gian
string get_time() {
    time_t now = time(0);
    tm *ltm = localtime(&now);

    char buffer[80];
    sprintf(buffer, "%04d/%02d/%02d %02d:%02d:%02d",
            1900 + ltm->tm_year,
            1 + ltm->tm_mon,
            ltm->tm_mday,
            ltm->tm_hour,
            ltm->tm_min,
            ltm->tm_sec);

    return string(buffer);
}

// l·ªãch s·ª≠ n·∫°p ti·ªÅn
void history_deposit() {
    ifstream openfile("lichsugiaodich.txt");

    if (!openfile.is_open()) {
        cout << "\n‚ö†Ô∏è L·ªói: Kh√¥ng th·ªÉ m·ªü file l·ªãch s·ª≠ giao d·ªãch!\n";
        return;
    }

    string line;
    system("cls");
    cout << "\n====================== üßæ L·ªäCH S·ª¨ N·∫†P TI·ªÄN ========================\n";

    bool empty = true;
    while (getline(openfile, line)) {  // ƒë·ªçc t·ª´ng d√≤ng
        if (!line.empty()) {
            cout << "üîπ " << line << endl;
            empty = false;
        }
    }

    if (empty)  cout << "‚ùå Ch∆∞a c√≥ giao d·ªãch n√†o!\n";

    openfile.close();
    cout << "=========================================================\n";
    system("pause");
}

// ƒë·ªçc l·ªãch s·ª≠ ƒëƒÉng nh·∫≠p
void showlogin_history() {
    ifstream openfile("lichsudangnhap.txt"); 

    if (!openfile.is_open()) {
        cout << "\t‚ö†Ô∏è L·ªói: Kh√¥ng th·ªÉ m·ªü file l·ªãch s·ª≠ ƒëƒÉng nh·∫≠p!\n";
        return;
    }

    string line;
    bool empty = true;
    system("cls");
    cout << "\n===================== üßæ L·ªäCH S·ª¨ ƒêƒÇNG NH·∫¨P =====================\n";

    while (getline(openfile, line)) {
        if (!line.empty()) {
            cout << "üîπ " << line << endl;
            empty = false;
        }
    }

    if (empty)
        cout << "‚ùå Ch∆∞a c√≥ l·ªãch s·ª≠ ƒëƒÉng nh·∫≠p!\n";

    openfile.close();
    cout << "===============================================================\n";
    system("pause");
}

// t√™n user trong giao di·ªán
void name_user(){string line;
    ifstream openfile("name.txt");
    if(openfile.is_open()){
        openfile>>line;
        cout<<"\tNAME: "<<line;
        openfile.close();
    }
}

// t√™n user cho t√°c v·ª• kh√°c
string get_name_user() { string line;
    ifstream openfile("name.txt");
    if (openfile.is_open()) {
        openfile >> line;
        openfile.close();
        return line;
    } else {
        return "USER_ERROR";
    }
}

//mua s·∫Øm
void shopping(){int choice;
    system("cls");cout<<"\n\n";
    cout<<"\t1. Voucher taxi\n";
    cout<<"\t2. V√© m√°y bay\n";
    cout<<"\t--> ";cin>>choice;
    switch(choice){

    }
}

// h√†m ch√≠nh user(main)
void dashboard_user(){int choice;
    do{system("cls");cout<<"\n\n";
        cout << "\n\t=========================================\n";
        name_user();cout<<" |";showBalance();
        cout << "\n\t=========================================\n\n\n\n";

        cout << "\t1. N·∫°p ti·ªÅn\n";
        cout << "\t2. Chuy·ªÉn ti·ªÅn\n";
        cout << "\t3. L·ªãch s·ª≠ n·∫°p ti·ªÅn\n";
        cout << "\t4. L·ªãch s·ª≠ ƒëƒÉng nh·∫≠p\n";
        cout << "\t5. Mua s·∫Øm(comming soon)\n";
        cout << "\t0. ƒêƒÉng xu·∫•t\n";
        cout<<"\t--> ";cin>>choice;
        switch(choice){
            case 1:{deposit();break;}
            case 2:{transfer_money();break;}
            case 3:{history_deposit();break;}
            case 4:{showlogin_history();break;}
            case 5:{shopping();break;}
        }
    }while(choice!=0);
}

//--------------------------------------------------------------------------
int main(){
    menu_banking();
    return 0;
}
